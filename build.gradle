plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'hr.adriaticanimation'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

configurations {
	mockitoAgent
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'io.jsonwebtoken:jjwt:0.12.6'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0"
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'org.apache.tika:tika-core:1.4'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation(libs.mockito)
	mockitoAgent libs.mockito, { transitive = false }
	
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
	jvmArgs "-javaagent:${configurations.mockitoAgent.asPath}"
}

tasks.named('test') {
	useJUnitPlatform()
}
